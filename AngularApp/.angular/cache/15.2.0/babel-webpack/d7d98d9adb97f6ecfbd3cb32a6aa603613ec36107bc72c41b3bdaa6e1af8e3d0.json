{"ast":null,"code":"import { EmployeeService } from '../shared/employee.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/employee.service\";\nfunction EmployeeComponent_tr_53_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"a\", 21);\n    i0.ɵɵlistener(\"click\", function EmployeeComponent_tr_53_Template_a_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const emp_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onEdit(emp_r7));\n    });\n    i0.ɵɵelementStart(9, \"i\", 22);\n    i0.ɵɵtext(10, \"edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"a\", 21);\n    i0.ɵɵlistener(\"click\", function EmployeeComponent_tr_53_Template_a_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const emp_r7 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(7);\n      return i0.ɵɵresetView(ctx_r10.onDelete(emp_r7._id, _r0));\n    });\n    i0.ɵɵelementStart(12, \"i\", 22);\n    i0.ɵɵtext(13, \"delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const emp_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emp_r7.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emp_r7.position);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emp_r7.office);\n  }\n}\nexport class EmployeeComponent {\n  constructor(employeeService) {\n    this.employeeService = employeeService;\n  }\n  ngOnInit() {\n    this.resetForm();\n    this.refreshEmployeeList();\n  }\n  resetForm(form) {\n    if (form) {\n      form.reset();\n      this.refreshEmployeeList();\n    }\n  }\n  onSubmit(form) {\n    if (form.value._id == \"\") {\n      this.employeeService.postEmployee(form.value).subscribe(res => {\n        this.resetForm(form);\n        this.refreshEmployeeList();\n        M.toast({\n          html: 'Saved successfully',\n          classes: 'rounded'\n        });\n      });\n    } else {\n      this.employeeService.putEmployee(form.value).subscribe(res => {\n        this.resetForm(form);\n        this.refreshEmployeeList();\n        M.toast({\n          html: 'Updated successfully',\n          classes: 'rounded'\n        });\n      });\n    }\n  }\n  refreshEmployeeList() {\n    this.employeeService.getEmployeeList().subscribe(res => {\n      this.employeeService.employees = res;\n    });\n  }\n  onEdit(emp) {\n    this.employeeService.selectedEmployee = emp;\n  }\n  onDelete(_id, form) {\n    if (confirm('Are you sure to delete this record ?') == true) {\n      this.employeeService.deleteEmployee(_id).subscribe(res => {\n        this.refreshEmployeeList();\n        this.resetForm(form);\n        M.toast({\n          html: 'Deleted successfully',\n          classes: 'rounded'\n        });\n      });\n    }\n  }\n}\nEmployeeComponent.ɵfac = function EmployeeComponent_Factory(t) {\n  return new (t || EmployeeComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService));\n};\nEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmployeeComponent,\n  selectors: [[\"app-employee\"]],\n  features: [i0.ɵɵProvidersFeature([EmployeeService])],\n  decls: 54,\n  vars: 7,\n  consts: [[1, \"row\"], [1, \"col\", \"s12\"], [1, \"card\"], [1, \"card-content\", \"white-text\"], [1, \"col\", \"s5\"], [3, \"ngSubmit\"], [\"employeeForm\", \"ngForm\"], [\"type\", \"hidden\", \"name\", \"_id\", 3, \"ngModel\", \"ngModelChange\"], [\"_id\", \"ngModel\"], [1, \"input-field\", \"col\", \"s12\"], [\"type\", \"text\", \"name\", \"name\", \"placeholder\", \"Enter full name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"ngModel\"], [1, \"red-text\"], [\"type\", \"text\", \"name\", \"position\", \"placeholder\", \"Eg : Snr. Developer\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"office\", \"placeholder\", \"Enter office location\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"salary\", \"placeholder\", \"Salary per annum\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-custom\", \"right\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-custom\", \"right\", 3, \"disabled\"], [1, \"col\", \"s7\"], [1, \"responsive-table\", \"highlight\"], [4, \"ngFor\", \"ngForOf\"], [1, \"action-btn\", 3, \"click\"], [1, \"material-icons\"]],\n  template: function EmployeeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r11 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 0)(5, \"div\", 4)(6, \"form\", 5, 6);\n      i0.ɵɵlistener(\"ngSubmit\", function EmployeeComponent_Template_form_ngSubmit_6_listener() {\n        i0.ɵɵrestoreView(_r11);\n        const _r0 = i0.ɵɵreference(7);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(8, \"input\", 7, 8);\n      i0.ɵɵlistener(\"ngModelChange\", function EmployeeComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.employeeService.selectedEmployee._id = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 0)(11, \"div\", 9)(12, \"input\", 10, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function EmployeeComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.employeeService.selectedEmployee.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"label\");\n      i0.ɵɵtext(15, \"Name : \");\n      i0.ɵɵelementStart(16, \"label\", 12);\n      i0.ɵɵtext(17, \"*\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(18, \"div\", 0)(19, \"div\", 9)(20, \"input\", 13, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function EmployeeComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.employeeService.selectedEmployee.position = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"label\");\n      i0.ɵɵtext(23, \"Position :\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"div\", 0)(25, \"div\", 9)(26, \"input\", 14, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function EmployeeComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.employeeService.selectedEmployee.office = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"label\");\n      i0.ɵɵtext(29, \"Office :\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(30, \"div\", 0)(31, \"div\", 9)(32, \"input\", 15, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function EmployeeComponent_Template_input_ngModelChange_32_listener($event) {\n        return ctx.employeeService.selectedEmployee.salary = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"label\");\n      i0.ɵɵtext(35, \"Salary :\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(36, \"div\", 0)(37, \"div\", 9)(38, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function EmployeeComponent_Template_button_click_38_listener() {\n        i0.ɵɵrestoreView(_r11);\n        const _r0 = i0.ɵɵreference(7);\n        return i0.ɵɵresetView(ctx.resetForm(_r0));\n      });\n      i0.ɵɵtext(39, \"Reset\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"button\", 17);\n      i0.ɵɵtext(41, \"Submit\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(42, \"div\", 18)(43, \"table\", 19)(44, \"thead\")(45, \"tr\")(46, \"th\");\n      i0.ɵɵtext(47, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"th\");\n      i0.ɵɵtext(49, \"Position\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"th\");\n      i0.ɵɵtext(51, \"Office\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(52, \"th\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(53, EmployeeComponent_tr_53_Template, 14, 3, \"tr\", 20);\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(7);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.employeeService.selectedEmployee._id);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.employeeService.selectedEmployee.name);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.employeeService.selectedEmployee.position);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.employeeService.selectedEmployee.office);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.employeeService.selectedEmployee.salary);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"disabled\", !_r0.valid);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.employeeService.employees);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["EmployeeService","i0","EmployeeComponent","constructor","employeeService","ngOnInit","resetForm","refreshEmployeeList","form","reset","onSubmit","value","_id","postEmployee","subscribe","res","M","toast","html","classes","putEmployee","getEmployeeList","employees","onEdit","emp","selectedEmployee","onDelete","confirm","deleteEmployee","selectors","features","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\hp\\Desktop\\University Stuff\\Web Tech\\Labs\\Angular CEP Lab\\AngularApp\\src\\app\\employee\\employee.component.ts","C:\\Users\\hp\\Desktop\\University Stuff\\Web Tech\\Labs\\Angular CEP Lab\\AngularApp\\src\\app\\employee\\employee.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms'\nimport { EmployeeService } from '../shared/employee.service';\nimport { Employee } from '../shared/employee.model';\n\ndeclare var M: any;\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css'],\n  providers: [EmployeeService]\n})\nexport class EmployeeComponent implements OnInit {\n  constructor(public employeeService: EmployeeService) {\n\n  }\n\n  ngOnInit() {\n    this.resetForm()\n    this.refreshEmployeeList()\n  }\n\n  resetForm(form? : NgForm) {\n    if(form) {\n      form.reset()\n      this.refreshEmployeeList();\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.value._id == \"\") {\n      this.employeeService.postEmployee(form.value).subscribe((res) => {\n        this.resetForm(form);\n        this.refreshEmployeeList();\n        M.toast({ html: 'Saved successfully', classes: 'rounded' });\n      });\n    }\n    else {\n      this.employeeService.putEmployee(form.value).subscribe((res) => {\n        this.resetForm(form);\n        this.refreshEmployeeList();\n        M.toast({ html: 'Updated successfully', classes: 'rounded' });\n      });\n    }\n  }\n\n  refreshEmployeeList() {\n    this.employeeService.getEmployeeList().subscribe((res) => {\n      this.employeeService.employees = res as Employee[];\n    });\n  }\n  \n  onEdit(emp: Employee) {\n    this.employeeService.selectedEmployee = emp;\n  }\n  \n  onDelete(_id: string, form: NgForm) {\n    if (confirm('Are you sure to delete this record ?') == true) {\n      this.employeeService.deleteEmployee(_id).subscribe((res) => {\n        this.refreshEmployeeList();\n        this.resetForm(form);\n        M.toast({ html: 'Deleted successfully', classes: 'rounded' });\n      });\n    }\n  }\n\n  }\n\n","<div class=\"row\">\n    <div class=\"col s12\">\n      <div class=\"card\">\n        <div class=\"card-content white-text\">\n          <div class=\"row\">\n            <div class=\"col s5\">\n              <form #employeeForm=\"ngForm\" (ngSubmit)=\"onSubmit(employeeForm)\">\n                <input type=\"hidden\" name=\"_id\" #_id=\"ngModel\" [(ngModel)]=\"employeeService.selectedEmployee._id\">\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <input type=\"text\" name=\"name\" #name=\"ngModel\" [(ngModel)]=\"employeeService.selectedEmployee.name\" placeholder=\"Enter full name\" required>\n                    <label>Name :\n                      <label class=\"red-text\">*</label>\n                    </label>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <input type=\"text\" name=\"position\" #name=\"ngModel\" [(ngModel)]=\"employeeService.selectedEmployee.position\" placeholder=\"Eg : Snr. Developer\">\n                    <label>Position :</label>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <input type=\"text\" name=\"office\" #name=\"ngModel\" [(ngModel)]=\"employeeService.selectedEmployee.office\" placeholder=\"Enter office location\">\n                    <label>Office :</label>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <input type=\"text\" name=\"salary\" #name=\"ngModel\" [(ngModel)]=\"employeeService.selectedEmployee.salary\" placeholder=\"Salary per annum\">\n                    <label>Salary :</label>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <button class=\"btn btn-custom right\" type=\"button\" (click)=\"resetForm(employeeForm)\">Reset</button>\n                    <button class=\"btn btn-custom right\" type=\"submit\" [disabled]=\"!employeeForm.valid\">Submit</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n            <div class=\"col s7\">\n                <table class=\"responsive-table highlight\">\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Position</th>\n                        <th>Office</th>\n                        <th></th>\n                      </tr>\n                    </thead>\n                    <tr *ngFor=\"let emp of employeeService.employees\">\n                      <td>{{emp.name}}</td>\n                      <td>{{emp.position}}</td>\n                      <td>{{emp.office}}</td>\n                      <td>\n                          <a class=\"action-btn\" (click)=\"onEdit(emp)\">\n                            <i class=\"material-icons\">edit</i>\n                          </a>\n                          <a class=\"action-btn\" (click)=\"onDelete(emp._id,employeeForm)\">\n                            <i class=\"material-icons\">delete</i>\n                          </a>\n                        </td>\n                    </tr>\n                  </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  \n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}